pipeline {
    agent any
    
    environment {
        MAVEN_HOME = tool 'Maven'
        DOCKER_IMAGE_NAME = "abc5482/my-page"
        DOCKER_IMAGE = ""
    }

    stages {
        stage('Checkout Source') {
            steps {
                // Git 클론 단계
                // git branch: 'main', credentialsId: 'Git-Token', url: 'https://github.com/ThreeCircle/Kubernetes-Docker-Jenkins-Test.git'
                git branch: 'main', url: 'https://github.com/ThreeCircle/Kubernetes-Docker-Jenkins-Test.git'
            }
        }
        stage('Build WAR') {
            steps {
                script {
                    sh "${MAVEN_HOME}/bin/mvn clean package"
                }
            }
        }
        stage('Deploy WAR') {
            steps {
                // WAR 파일을 원하는 위치로 배포
                // 예: Tomcat의 webapps 디렉토리에 복사
                sh "cp target/*.war /usr/local/tomcat/webapps/"
            }
        }
        stage('Build Image') {
            steps {
                script {
                    DOCKER_IMAGE = docker.build DOCKER_IMAGE_NAME
                }
            }
        }
        stage('Pushing Image') {
            environment {
                registryCredential = 'Docker-Hub-Token'
            }
            steps {
                script {
                    docker.withRegistry('https://registry.hub.docker.com', registryCredential) {
                        DOCKER_IMAGE.push("latest")
                    }
                }
            }
        }
    }
    // 여기에 추가적인 설정을 넣을 수 있습니다
}


